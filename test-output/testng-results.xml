<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="18" passed="15" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-25T18:17:41 CEST" name="Regression" finished-at="2024-05-25T18:18:46 CEST" duration-ms="64787">
    <groups>
    </groups>
    <test started-at="2024-05-25T18:17:41 CEST" name="Test" finished-at="2024-05-25T18:18:46 CEST" duration-ms="64787">
      <class name="SwagLabsProjectTests.ProductPriceConsistencyTest">
        <test-method is-config="true" signature="begin()[pri:0, instance:SwagLabsProjectTests.ProductPriceConsistencyTest@359df09a]" started-at="2024-05-25T18:18:33 CEST" name="begin" finished-at="2024-05-25T18:18:35 CEST" duration-ms="2238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- begin -->
        <test-method signature="fitstTest()[pri:0, instance:SwagLabsProjectTests.ProductPriceConsistencyTest@359df09a]" started-at="2024-05-25T18:18:35 CEST" name="fitstTest" finished-at="2024-05-25T18:18:36 CEST" duration-ms="978" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fitstTest -->
        <test-method is-config="true" signature="finish()[pri:0, instance:SwagLabsProjectTests.ProductPriceConsistencyTest@359df09a]" started-at="2024-05-25T18:18:36 CEST" name="finish" finished-at="2024-05-25T18:18:36 CEST" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finish -->
        <test-method is-config="true" signature="begin()[pri:0, instance:SwagLabsProjectTests.ProductPriceConsistencyTest@359df09a]" started-at="2024-05-25T18:18:36 CEST" name="begin" finished-at="2024-05-25T18:18:39 CEST" duration-ms="2408" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- begin -->
        <test-method signature="secondTest()[pri:0, instance:SwagLabsProjectTests.ProductPriceConsistencyTest@359df09a]" started-at="2024-05-25T18:18:39 CEST" name="secondTest" finished-at="2024-05-25T18:18:40 CEST" duration-ms="1702" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondTest -->
        <test-method is-config="true" signature="finish()[pri:0, instance:SwagLabsProjectTests.ProductPriceConsistencyTest@359df09a]" started-at="2024-05-25T18:18:40 CEST" name="finish" finished-at="2024-05-25T18:18:41 CEST" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finish -->
        <test-method is-config="true" signature="begin()[pri:0, instance:SwagLabsProjectTests.ProductPriceConsistencyTest@359df09a]" started-at="2024-05-25T18:18:41 CEST" name="begin" finished-at="2024-05-25T18:18:43 CEST" duration-ms="2185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- begin -->
        <test-method signature="thirdTest()[pri:0, instance:SwagLabsProjectTests.ProductPriceConsistencyTest@359df09a]" started-at="2024-05-25T18:18:43 CEST" name="thirdTest" finished-at="2024-05-25T18:18:46 CEST" duration-ms="2916" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdTest -->
        <test-method is-config="true" signature="finish()[pri:0, instance:SwagLabsProjectTests.ProductPriceConsistencyTest@359df09a]" started-at="2024-05-25T18:18:46 CEST" name="finish" finished-at="2024-05-25T18:18:46 CEST" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finish -->
      </class> <!-- SwagLabsProjectTests.ProductPriceConsistencyTest -->
      <class name="SwagLabsProjectTests.ProdAddAndRemTest">
        <test-method is-config="true" signature="begin()[pri:0, instance:SwagLabsProjectTests.ProdAddAndRemTest@609e8838]" started-at="2024-05-25T18:18:21 CEST" name="begin" finished-at="2024-05-25T18:18:23 CEST" duration-ms="2328" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- begin -->
        <test-method signature="caseOne()[pri:0, instance:SwagLabsProjectTests.ProdAddAndRemTest@609e8838]" started-at="2024-05-25T18:18:23 CEST" name="caseOne" finished-at="2024-05-25T18:18:25 CEST" duration-ms="1738" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- caseOne -->
        <test-method is-config="true" signature="finish()[pri:0, instance:SwagLabsProjectTests.ProdAddAndRemTest@609e8838]" started-at="2024-05-25T18:18:25 CEST" name="finish" finished-at="2024-05-25T18:18:25 CEST" duration-ms="127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finish -->
        <test-method is-config="true" signature="begin()[pri:0, instance:SwagLabsProjectTests.ProdAddAndRemTest@609e8838]" started-at="2024-05-25T18:18:25 CEST" name="begin" finished-at="2024-05-25T18:18:28 CEST" duration-ms="2347" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- begin -->
        <test-method signature="caseThree()[pri:0, instance:SwagLabsProjectTests.ProdAddAndRemTest@609e8838]" started-at="2024-05-25T18:18:28 CEST" name="caseThree" finished-at="2024-05-25T18:18:29 CEST" duration-ms="1427" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- caseThree -->
        <test-method is-config="true" signature="finish()[pri:0, instance:SwagLabsProjectTests.ProdAddAndRemTest@609e8838]" started-at="2024-05-25T18:18:29 CEST" name="finish" finished-at="2024-05-25T18:18:29 CEST" duration-ms="125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finish -->
        <test-method is-config="true" signature="begin()[pri:0, instance:SwagLabsProjectTests.ProdAddAndRemTest@609e8838]" started-at="2024-05-25T18:18:29 CEST" name="begin" finished-at="2024-05-25T18:18:32 CEST" duration-ms="2332" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- begin -->
        <test-method signature="caseTwo()[pri:0, instance:SwagLabsProjectTests.ProdAddAndRemTest@609e8838]" started-at="2024-05-25T18:18:32 CEST" name="caseTwo" finished-at="2024-05-25T18:18:33 CEST" duration-ms="1388" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- caseTwo -->
        <test-method is-config="true" signature="finish()[pri:0, instance:SwagLabsProjectTests.ProdAddAndRemTest@609e8838]" started-at="2024-05-25T18:18:33 CEST" name="finish" finished-at="2024-05-25T18:18:33 CEST" duration-ms="116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finish -->
      </class> <!-- SwagLabsProjectTests.ProdAddAndRemTest -->
      <class name="SwagLabsProjectTests.LoginTest">
        <test-method is-config="true" signature="begin()[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:17:49 CEST" name="begin" finished-at="2024-05-25T18:17:51 CEST" duration-ms="2187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- begin -->
        <test-method signature="emptyUserField()[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:17:51 CEST" name="emptyUserField" finished-at="2024-05-25T18:17:51 CEST" duration-ms="305" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyUserField -->
        <test-method is-config="true" signature="finish()[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:17:51 CEST" name="finish" finished-at="2024-05-25T18:17:51 CEST" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finish -->
        <test-method is-config="true" signature="begin()[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:17:51 CEST" name="begin" finished-at="2024-05-25T18:17:53 CEST" duration-ms="2172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- begin -->
        <test-method signature="incorrectPassword()[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:17:53 CEST" name="incorrectPassword" finished-at="2024-05-25T18:17:54 CEST" duration-ms="316" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Epic sadface: Username and password do not match any user in this seeervice] but found [Epic sadface: Username and password do not match any user in this service]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Epic sadface: Username and password do not match any user in this seeervice] but found [Epic sadface: Username and password do not match any user in this service]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at SwagLabsProjectTests.LoginTest.incorrectPassword(LoginTest.java:36)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- incorrectPassword -->
        <test-method is-config="true" signature="finish()[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:17:54 CEST" name="finish" finished-at="2024-05-25T18:17:54 CEST" duration-ms="115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finish -->
        <test-method is-config="true" signature="begin()[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:17:54 CEST" name="begin" finished-at="2024-05-25T18:17:56 CEST" duration-ms="2296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- begin -->
        <test-method signature="incorrectUserAndPass()[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:17:56 CEST" name="incorrectUserAndPass" finished-at="2024-05-25T18:17:57 CEST" duration-ms="335" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Epic sadface: Username and password do not match any user in this seeervice] but found [Epic sadface: Username and password do not match any user in this service]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Epic sadface: Username and password do not match any user in this seeervice] but found [Epic sadface: Username and password do not match any user in this service]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at SwagLabsProjectTests.LoginTest.incorrectUserAndPass(LoginTest.java:43)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- incorrectUserAndPass -->
        <test-method is-config="true" signature="finish()[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:17:57 CEST" name="finish" finished-at="2024-05-25T18:17:57 CEST" duration-ms="111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finish -->
        <test-method is-config="true" signature="begin()[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:17:57 CEST" name="begin" finished-at="2024-05-25T18:17:59 CEST" duration-ms="2318" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- begin -->
        <test-method signature="incorrectUsername()[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:17:59 CEST" name="incorrectUsername" finished-at="2024-05-25T18:17:59 CEST" duration-ms="335" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Epic sadface: Username and password do not match any user in this seeervice] but found [Epic sadface: Username and password do not match any user in this service]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Epic sadface: Username and password do not match any user in this seeervice] but found [Epic sadface: Username and password do not match any user in this service]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at SwagLabsProjectTests.LoginTest.incorrectUsername(LoginTest.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- incorrectUsername -->
        <test-method is-config="true" signature="finish()[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:18:00 CEST" name="finish" finished-at="2024-05-25T18:18:00 CEST" duration-ms="112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finish -->
        <test-method is-config="true" signature="begin()[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:18:00 CEST" name="begin" finished-at="2024-05-25T18:18:02 CEST" duration-ms="2257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- begin -->
        <test-method signature="lockedUser()[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:18:02 CEST" name="lockedUser" finished-at="2024-05-25T18:18:02 CEST" duration-ms="331" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lockedUser -->
        <test-method is-config="true" signature="finish()[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:18:02 CEST" name="finish" finished-at="2024-05-25T18:18:02 CEST" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finish -->
        <test-method is-config="true" signature="begin()[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:18:02 CEST" name="begin" finished-at="2024-05-25T18:18:05 CEST" duration-ms="2239" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- begin -->
        <test-method signature="pullingDataForLogin(java.lang.String,java.lang.String)[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:18:05 CEST" name="pullingDataForLogin" data-provider="getData" finished-at="2024-05-25T18:18:05 CEST" duration-ms="349" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pullingDataForLogin -->
        <test-method is-config="true" signature="finish()[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:18:05 CEST" name="finish" finished-at="2024-05-25T18:18:05 CEST" duration-ms="115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finish -->
        <test-method is-config="true" signature="begin()[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:18:05 CEST" name="begin" finished-at="2024-05-25T18:18:07 CEST" duration-ms="2252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- begin -->
        <test-method signature="pullingDataForLogin(java.lang.String,java.lang.String)[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:18:07 CEST" name="pullingDataForLogin" data-provider="getData" finished-at="2024-05-25T18:18:08 CEST" duration-ms="339" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[problem_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pullingDataForLogin -->
        <test-method is-config="true" signature="finish()[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:18:08 CEST" name="finish" finished-at="2024-05-25T18:18:08 CEST" duration-ms="124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finish -->
        <test-method is-config="true" signature="begin()[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:18:08 CEST" name="begin" finished-at="2024-05-25T18:18:10 CEST" duration-ms="2219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- begin -->
        <test-method signature="pullingDataForLogin(java.lang.String,java.lang.String)[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:18:10 CEST" name="pullingDataForLogin" data-provider="getData" finished-at="2024-05-25T18:18:15 CEST" duration-ms="5314" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[performance_glitch_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pullingDataForLogin -->
        <test-method is-config="true" signature="finish()[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:18:15 CEST" name="finish" finished-at="2024-05-25T18:18:15 CEST" duration-ms="124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finish -->
        <test-method is-config="true" signature="begin()[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:18:15 CEST" name="begin" finished-at="2024-05-25T18:18:18 CEST" duration-ms="2410" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- begin -->
        <test-method signature="pullingDataForLogin(java.lang.String,java.lang.String)[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:18:18 CEST" name="pullingDataForLogin" data-provider="getData" finished-at="2024-05-25T18:18:18 CEST" duration-ms="348" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[error_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pullingDataForLogin -->
        <test-method is-config="true" signature="finish()[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:18:18 CEST" name="finish" finished-at="2024-05-25T18:18:18 CEST" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finish -->
        <test-method is-config="true" signature="begin()[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:18:18 CEST" name="begin" finished-at="2024-05-25T18:18:21 CEST" duration-ms="2331" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- begin -->
        <test-method signature="pullingDataForLogin(java.lang.String,java.lang.String)[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:18:21 CEST" name="pullingDataForLogin" data-provider="getData" finished-at="2024-05-25T18:18:21 CEST" duration-ms="321" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[visual_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pullingDataForLogin -->
        <test-method is-config="true" signature="finish()[pri:0, instance:SwagLabsProjectTests.LoginTest@2b30a42c]" started-at="2024-05-25T18:18:21 CEST" name="finish" finished-at="2024-05-25T18:18:21 CEST" duration-ms="119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finish -->
      </class> <!-- SwagLabsProjectTests.LoginTest -->
      <class name="SwagLabsProjectTests.StandAloneTest">
        <test-method is-config="true" signature="begin()[pri:0, instance:SwagLabsProjectTests.StandAloneTest@5032714f]" started-at="2024-05-25T18:17:41 CEST" name="begin" finished-at="2024-05-25T18:17:44 CEST" duration-ms="2570" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- begin -->
        <test-method signature="firsTest()[pri:0, instance:SwagLabsProjectTests.StandAloneTest@5032714f]" started-at="2024-05-25T18:17:44 CEST" name="firsTest" finished-at="2024-05-25T18:17:45 CEST" duration-ms="1151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firsTest -->
        <test-method is-config="true" signature="finish()[pri:0, instance:SwagLabsProjectTests.StandAloneTest@5032714f]" started-at="2024-05-25T18:17:45 CEST" name="finish" finished-at="2024-05-25T18:17:45 CEST" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finish -->
        <test-method is-config="true" signature="begin()[pri:0, instance:SwagLabsProjectTests.StandAloneTest@5032714f]" started-at="2024-05-25T18:17:45 CEST" name="begin" finished-at="2024-05-25T18:17:47 CEST" duration-ms="2263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- begin -->
        <test-method signature="secondTest()[pri:0, instance:SwagLabsProjectTests.StandAloneTest@5032714f]" started-at="2024-05-25T18:17:47 CEST" name="secondTest" finished-at="2024-05-25T18:17:48 CEST" duration-ms="1226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondTest -->
        <test-method is-config="true" signature="finish()[pri:0, instance:SwagLabsProjectTests.StandAloneTest@5032714f]" started-at="2024-05-25T18:17:48 CEST" name="finish" finished-at="2024-05-25T18:17:49 CEST" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finish -->
      </class> <!-- SwagLabsProjectTests.StandAloneTest -->
    </test> <!-- Test -->
  </suite> <!-- Regression -->
</testng-results>
